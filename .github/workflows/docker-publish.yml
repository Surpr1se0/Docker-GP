name: Build and Push Docker Images

# Executa o workflow quando uma release é criada
on:
  release:
    types: [created]

jobs:
  build:
    # Define o ambiente como Ubuntu
    runs-on: ubuntu-latest

    steps:
      # Passo 1: Fazer checkout do código do repositório
      - name: Checkout code
        uses: actions/checkout@v3

      # Passo 2: Configurar o Docker Buildx (para builds multi-plataforma)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Passo 3: Fazer login no Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}  # Nome de usuário no Docker Hub (guardado nos secrets)
          password: ${{ secrets.DOCKER_PASSWORD }}  # Senha no Docker Hub (guardada nos secrets)

      # Passo 4: Construir e enviar a imagem para o sqlserver
      - name: Build and push sqlserver image
        uses: docker/build-push-action@v5
        with:
          context: ./Dockerfile-sqlserver  # Caminho para o Dockerfile do sqlserver
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/sqlserver:${{ github.ref_name }} # Nome da imagem e tag com o nome da release

      # Passo 5: Construir e enviar a imagem para o sqlserver.configurator
      - name: Build and push sqlserver.configurator image
        uses: docker/build-push-action@v5
        with:
          context: ./Dockerfile-configurator  # Caminho para o Dockerfile do sqlserver.configurator
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/sqlserver-configurator:${{ github.ref_name }} # Nome da imagem e tag com o nome da release
